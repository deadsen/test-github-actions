# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Select deployment_type'
        required: true
        default: primary
        type: choice
        options:
          - primary
          - secondary
  workflow_call:
    inputs:
      deployment_type:
        required: true
        type: string
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: dev
    env: 
      DEPLOYMENTS: ${{ vars.DEPLOYMENTS }}
      DEPLOYMENT_TYPE: ${{ inputs.deployment_type || 'primary'}}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Set deployment variables
        run: |
          echo "REGION=$(echo $DEPLOYMENTS | jq -r '.${{ env.DEPLOYMENT_TYPE }}.region')" >> $GITHUB_ENV
          echo "TRAFFIC_ENABLED=$(echo $DEPLOYMENTS | jq -r '.${{ env.DEPLOYMENT_TYPE }}.traffic_enabled')" >> $GITHUB_ENV
        

      - name: Check deployment variables
        run: |
          echo REGION = ${{ env.REGION }}
          echo TRAFFIC_ENABLED = ${{ env.TRAFFIC_ENABLED }}

      - name: Set regional variables
        id: set_region
        run: |
          aws_region=${{ vars[format('{0}_REGION', inputs.deployment_type)] }}
          traffic_enabled=${{ vars[format('{0}_TRAFFIC_ENABLED', inputs.deployment_type)] }}

          if [ -z $aws_region ];then
            echo "Please ensure that all variables with _REGION prefix is set in GitHub"
            exit 1
          elif [ -z $traffic_enabled ];then
            echo "Please ensure that all variables with _TRAFFIC_ENABLED prefix is set in GitHub"
            exit 1
          else
            # Set GitHub outputs
            echo "AWS_REGION=$aws_region" >> GITHUB_OUTPUT
            echo "TRAFFIC_ENABLED=$traffic_enabled" >> GITHUB_OUTPUT
          fi
          
      - name: Check regional variables
        run: |
          echo AWS_REGION = ${{ steps.set_region.outputs.AWS_REGION }}
          echo TRAFFIC_ENABLED = ${{ steps.set_region.outputs.AWS_REGION }}
